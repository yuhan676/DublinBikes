/* Basic reset */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* Full-screen map */
#map {
    height: 100vh;
    width: 100%;
}

/* Panel styling */
#left-panel, #weather-panel, #right_panel {
    position: absolute;
    background: white;
    padding: 10px;
    border-radius: 4px;
    box-shadow: 0 2px 6px rgba(0,0,0,0.3);
    z-index: 10;
    width: 300px;
}

#left-panel {
    top: 10px;
    left: 10px;
    display: flex;
    flex-direction: column; /* Stack children vertically */
    z-index: 11;
}

/* Style input fields to fill the panel width and add margin */
#left-panel input[type="time"],
#left-panel input[type="date"],
#left-panel input[type="text"],
.input_wrap {
    width: 100%; /* Input fields will fill the available horizontal space */
    margin-bottom: 10px; /* Add space between input fields */
}

#left-panel input[type="text"]
{
    margin-bottom: 0;
}

/* Remove bottom margin for the last input field */
#left-panel input[type="text"]:last-child {
    margin-bottom: 0;
}

/* Style for the container of the time picker and date picker */
.tabcontent .datetime-container {
    display: flex; /* This will align children elements (time and date pickers) in a row */
    justify-content: space-between; /* This will add space between the time and date pickers */
    margin-bottom: 10px; /* This will add some space below the pickers */
}

/* Style for the time and date picker inputs */
.tabcontent .datetime-container input[type="time"],
.tabcontent .datetime-container input[type="date"] {
    flex: 1; /* This will make each input grow to use available space */
    margin-right: 5px; /* This will add a small margin to the right of the time picker */
}

/* Adjust the last child margin to prevent double margin on the last element */
.tabcontent .datetime-container input[type="date"] {
    margin-right: 0; /* Resetting the right margin for the date picker */
}

.search_btn_container
{
    width: 100%;
    padding: 20px;
    justify-content: center;
}

#search_btn
{
    width: 100%;
    background-color: green;
    color: white;
    padding: 10px;
    cursor: pointer;
    border: 2px solid rgb(2, 189, 2);
    border-radius: 5px;
}

#search_btn:not(.disabled):hover
{
    background-color: rgb(2, 189, 2);
    border: 2px solid green;
}

#search_btn.disabled
{
    pointer-events: none;
    background-color: rgb(97, 97, 97);
    border: 2px solid grey;
    cursor: default;
}

#error_text
{
    color: red;
    text-align: center;
    margin-top: 5px;
    width: 100%;
}

#error_text:empty
{
    margin-top: 0;
}

/* Adjust the position of the weather panel */
#weather-panel {
    top: calc(100% + 20px); /* Place it below the left panel with a 10px margin */
    left: 10px;
    width: 300px;
    overflow: hidden;
    transition: max-height 0.5s ease;
    border: 1px solid #ccc; /* Add border for better visibility */
    border-radius: 5px; /* Add border radius for rounded corners */
    background-color: #f8f8f8; /* Set background color */
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* Add box shadow for depth */
}

.weather-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: 1.1em;
    padding: 10px;
    border-bottom: 1px solid #ccc; /* Add bottom border for header */
    background-color: #e0e0e0; /* Set header background color */
}

.weather-content {
    padding: 10px; /* Add padding to content for better spacing */
}

.weather-content p {
    margin: 5px 0; /* Add margin to paragraphs for better readability */
}

/* Additional styles for specific elements */

.weather-header h2 {
    color: #333; /* Set header text color */
}

.weather-content p {
    color: #555; /* Set content text color */
}

/* container for right panel */
#right_panel {
    top: 10px;
    right: 10px;
    width: 400px;
    padding: 0;
}

/* container for rent/return station info tab  */
.rp_tab_container
{
    width: 100%;
    display: flex;
}

/* styling for right panel rent/return tab */
.rp_tab_rent, .rp_tab_return
{
    width: 50%;
    padding: 20px;
    display: inline-block;
    text-align: center;
    font-size: 1.4rem;
    border: 0px solid grey;
    border-bottom-width: 2px;
    cursor: pointer;
}

/* change tab styling when tab is set to rp_rent or rp_return */
.rp_rent .rp_tab_rent, .rp_return .rp_tab_return
{
    border: 2px solid grey;
    border-bottom-width: 0;
}

/* container for right panel */
#rp_content
{
    padding: 10px;
    border: 2px solid grey;
    border-top-width: 0;
}

/* styling for station name container */
.rp_station_name
{
    width: 100%;
    padding: 20px;
    text-align: center;
    font-size: 2rem;
    font-weight: bold;
    position: relative;
}
/* styling for live and predicted lebel, display= none until class flag rp_live or rp_predicted is set */
.live_label, .predicted_label
{
    position: absolute;
    bottom: 0;
    left: 0;
    padding: 2px;
    font-size: 1rem;
    display: none;
}

/* display live_label when id 'right_panel's class flag is set to .rp_live */
.rp_live .live_label
{
    display: block;
    color: green;
}

/* display predicted_label when id 'right_panel's class flag is set to .rp_predicted */
.rp_predicted .predicted_label
{
    display: block;
    color:blue;
}

/* styling for the station status lable: open or closed */
.rp_station_open, .rp_station_close
{
    position: absolute;
    top:100%;
    left: 0;
    padding: 2px;
    font-size: 1rem;
    display:none;
}

/* display rp_station_open when id 'right_panel's class flag is set to .rp_open */

.rp_open .rp_station_open
{
    display:block;
}

/* display rp_station_close when id 'right_panel's class flag is set to .rp_closed */
.rp_closed .rp_station_close
{
    display: block;
}

/* styling for station's availability info depending on whether rent or return is selected, default display = none*/
.rp_station_info_rent, .rp_station_info_return
{
    text-align: center;
    padding-top: 1rem;
    display: none;
}

/* styling for the p  elements in .rp_station info_rent  */
.rp_station_info_rent p
{
    display: inline;
}

/* display rp_station_info_rent when id 'right_panel's class flag is set to .rp_rent */
.rp_rent .rp_station_info_rent
{
    display: block;
}

/* display rp_station_info_return when id 'right_panel's class flag is set to .rp_return */
.rp_return .rp_station_info_return
{
    display:block;
}

/* styling for prediction graphs container  */
.rp_prediction_rent, .rp_prediction_return
{
    height: 100px;
    background-color: red;
    display:none;
}

/* Testing use: override the background  color of rp_prediction_return so we can see the difference */
.rp_prediction_return
{
    background-color: green;
}

/* display rp_prediction_rent when id 'right_panel's class flag is set to .rp_rent */
.rp_rent .rp_prediction_rent
{
    display:block;
}

/* display rp_prediction_return when id 'right_panel's class flag is set to .rp_return */
.rp_return .rp_prediction_return
{
    display:block;
}

/* Tab container styling */
.tab {
    /* Adjustments to flex container */
    display: flex;
    justify-content: space-between; /* Space out tabs evenly */
    width: 100%; /* Ensure the tabs container fills the panel width */
    background-color: #f1f1f1;
}

/* Tab button styling */
.tab button.tablinks {
    background-color: inherit;
    float: left; /* Remove float and use flexbox instead */
    border: none;
    outline: none;
    cursor: pointer;
    padding: 14px 16px;
    transition: 0.3s;
    font-size: 17px;
    }

.tab button:hover {
    background-color: #ddd;
}

.tab button.active {
    background-color: #ccc;
}

.tabcontent {
    display: none;
    padding: 6px 12px;
    border: 1px solid #ccc;
    border-top: none;
}

.input_wrap {
    position: relative;
}

.suggestion_div
{
    padding: 5px;
}

.suggestion_div:hover
{
    background-color: lightblue;
}

.suggestion_box {
    position: absolute;
    left: 0;
    top: calc(100% + 2px);
    width: 100%;
    border: 1px solid #ccc;

    /* Equivalent to "#suggestion_box div" */
    & div {
        padding: 5px;
        text-align: center;
        width: 100%;
        cursor: pointer;
        background-color: white;
    }

    & div:hover {
        background-color: lightblue;
    }

    &:empty {
    display: none;
    }
}

/* Style adjustments for when a tab is active or hovered */
.tab button.tablinks:hover {
    background-color: #ddd;
}

.tab button.tablinks.active {
    background-color: #ccc;
}
/* Extreme weather pop up */
.popup {
    position: fixed;
    top: 25%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: white;
    padding: 20px;
    border: 1px solid #ccc;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    z-index: 9999; /* Ensure the panel appears on top */
    cursor: pointer; /* Change cursor to pointer */
}
.close {
    position: absolute;
    top: 10px;
    right: 10px;
}
/* suggestion box style*/
  #suggestion-container {
    width: 80%;
    margin: 0 auto;
    padding: 20px;
    border: 1px solid #ccc;
  }
  
  .suggestion-box {
    background-color: #f0f0f0;
    border: 1px solid #ddd;
    padding: 10px;
    margin-bottom: 10px;
  }
  
  .suggestion-image {
    width: 100px; /* Adjust image width as needed */
    height: auto; /* Maintain aspect ratio */
    display: block;
    margin: 0 auto;
  }
  
  .suggestion-text {
    text-align: center;
  }
  
  #suggestion-container:empty {
    display: none;
  }
/* Add any additional styling needed */
